{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACH;AACW;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;AC7B5B,+yE;;;;;;;;;;;ACAA,+BAA+B,mBAAmB,EAAE,WAAW,uBAAuB,aAAa,EAAE,cAAc,gBAAgB,iBAAiB,wBAAwB,EAAE,gBAAgB,sBAAsB,EAAE,kBAAkB,mBAAmB,sBAAsB,oBAAoB,EAAE,aAAa,iBAAiB,EAAE,2BAA2B,qBAAqB,EAAE,aAAa,8BAA8B,qBAAqB,EAAE,gBAAgB,qBAAqB,EAAE,sDAAsD,cAAc,0BAA0B,EAAE,aAAa,mBAAmB,EAAE,EAAE,+CAA+C,2lD;;;;;;;;;;;;;;;;;;;;;;;;;ACAnmB;AACT;AAEzC,oBAAoB;AAMpB;IAEE,mBACS,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QAGtB,UAAK,GAAK;YACR,UAAU,EAAC,EAAE;YACb,UAAU,EAAC,EAAE;SACd;QACD,iBAAY,GAAS,KAAK,CAAC;QAC3B,YAAO,GAAS,KAAK,CAAC;IAPlB,CAAC;IAQL,4BAAQ,GAAR;IACA,CAAC;IAED,gEAAgE;IAChE,4BAAQ,GAAR,UAAS,IAAI;QAAb,iBAiBC;QAhBC,0EAA0E;QAC1E,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAG,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAG,OAAO,EAAC;YAChE,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;YACvB,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnC,KAAI,CAAC,YAAY,GAAC,KAAK,CAAC;YAC1B,CAAC,EAAC,IAAI,CAAC;SACR;QACD,4DAA4D;aACtD;YACJ,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;YAClB,UAAU,CAAC;gBACT,KAAI,CAAC,OAAO,GAAC,KAAK,CAAC;gBACnB,KAAI,CAAC,YAAY,GAAC,KAAK,CAAC;YAC1B,CAAC,EAAC,IAAI,CAAC,CAAC;SACT;IACH,CAAC;IAjCU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yFAAgC;;SAEjC,CAAC;yCAIgB,sDAAM;OAHX,SAAS,CAkCrB;IAAD,gBAAC;CAAA;AAlCqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage,\n  },\n  {\n    path: 'welcome',\n    component: LoginPage,\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-grid>\\n  <ion-row justify-content-center>\\n    <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n      <div text-center>\\n        <h4>Login</h4>\\n      </div>\\n\\n      <form #LoginForm=\\\"ngForm\\\" role=\\\"form\\\" (ngSubmit)=\\\"onSubmit(LoginForm.form.valid)\\\" autocomplete=\\\"Off\\\">\\n        <div padding>\\n          <ion-item>\\n            <ion-input name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n              placeholder=\\\"Username\\\" required autocomplete=\\\"Off\\\"><ion-icon name=\\\"contact\\\" class=\\\"icon\\\"></ion-icon></ion-input>\\n          </ion-item>\\n          <div *ngIf=\\\"username.errors && ( (username.dirty || username.touched) || LoginForm. _submitted )\\\">\\n            <div class=\\\"errorClass\\\" [hidden]=\\\"!username.errors.required\\\">\\n              Username is required.\\n            </div>\\n          </div>\\n\\n          <ion-item>\\n            <ion-input name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"password\\\"\\n              placeholder=\\\"Password\\\" required autocomplete=\\\"Off\\\"><ion-icon name=\\\"key\\\" class=\\\"icon\\\"></ion-icon></ion-input>\\n          </ion-item>\\n          <div *ngIf=\\\"password.errors && ( (password.dirty || password.touched) || LoginForm. _submitted )\\\">\\n            <div class=\\\"errorClass\\\" [hidden]=\\\"!password.errors.required\\\">\\n              Password is required.\\n            </div>\\n          </div>\\n          <div padding *ngIf=\\\"isValid\\\" class=\\\"errorClass\\\">\\n            Username or Password is incorrect\\n          </div>\\n          <div class=\\\"btnSubmit\\\" padding>\\n            <ion-button type=\\\"submit\\\" *ngIf=\\\"isProcessing\\\" size=\\\"default\\\" href=\\\"javascript:void(0)\\\" expand=\\\"round\\\" [disabled]=\\\"!LoginForm.form.valid\\\">\\n                <ion-spinner name=\\\"bubbles\\\"></ion-spinner>\\n            </ion-button>\\n            <ion-button type=\\\"submit\\\" *ngIf=\\\"!isProcessing\\\" size=\\\"default\\\" href=\\\"javascript:void(0)\\\" expand=\\\"round\\\" [disabled]=\\\"!LoginForm.form.valid\\\">Login</ion-button>\\n            <div>\\n              <p><a style=\\\"cursor:pointer\\\" routerLink=\\\"/forgotpassword\\\">Forgot Password?</a></p>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </form>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\"","module.exports = \".errorClass {\\n  color: crimson; }\\n\\n.icon {\\n  position: absolute;\\n  right: 0; }\\n\\nion-grid {\\n  width: 100%;\\n  height: 100%;\\n  background: #1DA1F2; }\\n\\n.btnSubmit {\\n  text-align: right; }\\n\\n.btnSubmit p {\\n  display: block;\\n  text-align: right;\\n  font-size: 13px; }\\n\\nion-row {\\n  height: 100%; }\\n\\n.btnSubmit ion-button {\\n  min-width: 100px; }\\n\\nion-col {\\n  border: 1px solid #488aff;\\n  background: #fff; }\\n\\nion-button {\\n  font-weight: 300; }\\n\\n@media (min-width: 240px) and (max-width: 768px) {\\n  ion-grid {\\n    background: #1DA1F2; }\\n  ion-col {\\n    border: none; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpdnlhL0Rlc2t0b3AvbmV3SW9uaWNBcHAvc3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxjQUFjLEVBQUE7O0FBRWxCO0VBQ0ksa0JBQWtCO0VBQ2xCLFFBQVEsRUFBQTs7QUFLWjtFQUNJLFdBQVU7RUFDVixZQUpZO0VBS1osbUJBQW1CLEVBQUE7O0FBRXZCO0VBQ0ksaUJBQWlCLEVBQUE7O0FBRXJCO0VBQ0ksY0FBYTtFQUNiLGlCQUFpQjtFQUNqQixlQUFlLEVBQUE7O0FBR25CO0VBQ0ksWUFqQlksRUFBQTs7QUFtQmhCO0VBQ0ksZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0kseUJBQXlCO0VBQ3pCLGdCQTFCYyxFQUFBOztBQTZCbEI7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSTtJQUNJLG1CQUFtQixFQUFBO0VBRXZCO0lBQ0ksWUFBWSxFQUFBLEVBQ2YiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5lcnJvckNsYXNze1xuICAgIGNvbG9yOiBjcmltc29uO1xufVxuLmljb257XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xufVxuJHdoaXRlLWNvbG9yOiAjZmZmO1xuJGhlaWdodDEwMDogMTAwJTtcblxuaW9uLWdyaWQge1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OiAkaGVpZ2h0MTAwO1xuICAgIGJhY2tncm91bmQ6ICMxREExRjI7XG59XG4uYnRuU3VibWl0e1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLmJ0blN1Ym1pdCBwe1xuICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgZm9udC1zaXplOiAxM3B4O1xufVxuXG5pb24tcm93IHtcbiAgICBoZWlnaHQ6ICRoZWlnaHQxMDA7XG59XG4uYnRuU3VibWl0IGlvbi1idXR0b257XG4gICAgbWluLXdpZHRoOiAxMDBweDtcbn1cblxuaW9uLWNvbCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ4OGFmZjtcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGUtY29sb3I7XG59XG5cbmlvbi1idXR0b24ge1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAyNDBweCkgYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgaW9uLWdyaWQge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjMURBMUYyOztcbiAgICB9XG4gICAgaW9uLWNvbCB7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICB9XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/* Login Component*/\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(\n    public router:Router\n  ) { }\n\n  model:any={\n    'username':'',\n    'password':''\n  }\n  isProcessing:boolean=false;\n  isValid:boolean=false;\n  ngOnInit() {\n  }\n\n  /* Function for successfully login and route for welcome page */\n  onSubmit(form){\n    /* checking username and password(if match, then route on welcome page )*/\n    if(this.model.username==='admin' && this.model.password==='admin'){\n      this.isProcessing=true;\n      setTimeout(()=>{\n        this.router.navigate(['/welcome']);\n        this.isProcessing=false;\n      },3000)\n    } \n    /* if username and password don't match then show message */ \n      else{\n      this.isValid=true;\n      setTimeout(()=>{\n        this.isValid=false;\n        this.isProcessing=false;\n      },5000);  \n    }\n  }\n}\n"],"sourceRoot":""}